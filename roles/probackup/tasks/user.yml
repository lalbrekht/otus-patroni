- name: Ensure group "postgres" exists on backup hosts
  group:
    name: postgres
    gid: 3000
    state: present
  when: inventory_hostname in groups['backup']

- name: Create user for backups
  user:
    name: "{{ backup_user }}"
    group: postgres
    comment: posrtgresql backup user
    shell: /bin/bash

- name: Ensure that ssh directory exists
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: postgres
    mode: 0700
    state: directory
  loop:
    - { path: '/home/{{ backup_user }}/.ssh', owner: '{{ backup_user }}' }
    - { path: '/home/postgres/.ssh', owner: 'postgres' }

- name: Add public and private keys for this user
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0600
    owner: "{{ backup_user }}"
    group: postgres
  loop:
    - { src: 'keys/id_rsa', dest: '/home/{{ backup_user }}/.ssh/id_rsa' }
    - { src: 'keys/id_rsa.pub', dest: '/home/{{ backup_user }}/.ssh/id_rsa.pub' } 

- name: Add private keys for postgres user
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0600
    owner: postgres
    group: postgres
  loop:
    - { src: 'keys/id_rsa', dest: '/home/postgres/.ssh/id_rsa' }
  when: inventory_hostname in groups['db']

- name: Copy ssh config file to disabling host key check
  copy:
    src: keys/config
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0600
  loop:
    - { dest: '/home/{{ backup_user }}/.ssh/config', owner: '{{ backup_user }}' , group: 'postgres' }
    - { dest: '/home/postgres/.ssh/config', owner: 'postgres' , group: 'postgres' }
  tags:
    - ssh_config

- name: Set authorized key
  authorized_key:
    user: "{{ item }}"
    state: present
    key: "{{ lookup('file', 'keys/id_rsa.pub') }}"
  loop:
    - "{{ backup_user }}"
    - postgres
  tags:
    - keys
